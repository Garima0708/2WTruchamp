<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="AgBe" failures="0" tests="24" name="AppTests" time="9.903" errors="0" timestamp="2025-07-11T22:28:17 IST">
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.002">
    <failure type="java.lang.IllegalStateException" message="ExtentReports not initialized. Call setup() first.">
      <![CDATA[java.lang.IllegalStateException: ExtentReports not initialized. Call setup() first.
at com.tvs.pgm.twoW.mobile.tests.BaseTest.startTest(BaseTest.java:54)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <failure type="java.lang.IllegalStateException" message="ExtentReports not initialized. Call setup() first.">
      <![CDATA[java.lang.IllegalStateException: ExtentReports not initialized. Call setup() first.
at com.tvs.pgm.twoW.mobile.tests.BaseTest.startTest(BaseTest.java:54)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyLocationPermissionPopup" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLocationPermissionPopup -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyLocationPermissionOptionText" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLocationPermissionOptionText -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="allowLocationPermission" time="0.0">
    <skipped/>
  </testcase> <!-- allowLocationPermission -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyMobileNumberFieldDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyMobileNumberFieldDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyInvalidMobileNumberBlocked" time="0.0">
    <skipped/>
  </testcase> <!-- verifyInvalidMobileNumberBlocked -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="enterValidMobileNumber" time="0.0">
    <skipped/>
  </testcase> <!-- enterValidMobileNumber -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="clickVerifyNumberButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickVerifyNumberButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyOtpScreenDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyOtpScreenDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="clickOtpField" time="0.0">
    <skipped/>
  </testcase> <!-- clickOtpField -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="enterOtp" time="0.001">
    <skipped/>
  </testcase> <!-- enterOtp -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifywNotificationAccessText" time="0.0">
    <skipped/>
  </testcase> <!-- verifywNotificationAccessText -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyAllowButtonDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyAllowButtonDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickAllowButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickAllowButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyScanForRewardsButtonDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyScanForRewardsButtonDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickScanForRewardsButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickScanForRewardsButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyCameraAccessPermissionPopUpDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCameraAccessPermissionPopUpDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyWhileUsingTheAppPopUpDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyWhileUsingTheAppPopUpDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickWhileUsingTheAppPopUpButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickWhileUsingTheAppPopUpButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyRedeemModuleDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRedeemModuleDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickOnRedeemButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickOnRedeemButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickOnBackArrowRedeemButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickOnBackArrowRedeemButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="verifyFindPartsText" time="0.0">
    <skipped/>
  </testcase> <!-- verifyFindPartsText -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickOnFindPartsModule" time="0.0">
    <skipped/>
  </testcase> <!-- clickOnFindPartsModule -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.DashboardTest" name="clickOnCancel" time="0.0">
    <skipped/>
  </testcase> <!-- clickOnCancel -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- AppTests -->
