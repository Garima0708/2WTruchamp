<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="AgBe" failures="0" tests="10" name="AndroidAppTests" time="0.323" errors="0" timestamp="2025-07-11T22:05:11 IST">
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="@BeforeClass setup" time="0.02">
    <failure type="java.lang.IllegalStateException" message="Driver not initialized. Call initializeDriver() first.">
      <![CDATA[java.lang.IllegalStateException: Driver not initialized. Call initializeDriver() first.
at com.tvs.pgm.twoW.mobile.base.DriverManager.getDriver(DriverManager.java:33)
at com.tvs.pgm.twoW.mobile.pages.BasePage.<init>(BasePage.java:20)
at com.tvs.pgm.twoW.mobile.pages.LoginPage.<init>(LoginPage.java:36)
at com.tvs.pgm.twoW.mobile.tests.LoginTest.setup(LoginTest.java:18)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@BeforeMethod startTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTest -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.BaseTest" name="@AfterMethod captureResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod captureResult -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyLocationPermissionPopup" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLocationPermissionPopup -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyLocationPermissionOptionText" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLocationPermissionOptionText -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="allowLocationPermission" time="0.0">
    <skipped/>
  </testcase> <!-- allowLocationPermission -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyMobileNumberFieldDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyMobileNumberFieldDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyInvalidMobileNumberBlocked" time="0.0">
    <skipped/>
  </testcase> <!-- verifyInvalidMobileNumberBlocked -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="enterValidMobileNumber" time="0.0">
    <skipped/>
  </testcase> <!-- enterValidMobileNumber -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="clickVerifyNumberButton" time="0.001">
    <skipped/>
  </testcase> <!-- clickVerifyNumberButton -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="verifyOtpScreenDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyOtpScreenDisplayed -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="clickOtpField" time="0.0">
    <skipped/>
  </testcase> <!-- clickOtpField -->
  <testcase classname="com.tvs.pgm.twoW.mobile.tests.LoginTest" name="enterOtp" time="0.0">
    <skipped/>
  </testcase> <!-- enterOtp -->
</testsuite> <!-- AndroidAppTests -->
