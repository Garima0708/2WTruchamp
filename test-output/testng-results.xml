<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="52" passed="49" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-31T15:45:20 IST" name="2WApp UAT TestSuite" finished-at="2025-07-31T15:46:50 IST" duration-ms="90220">
    <groups>
      <group name="Query">
        <method signature="DashboardTest.verifyHelpText()[pri:26, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyHelpText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnHelp()[pri:27, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnHelp" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyCreateOrRequestQueryText()[pri:28, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyCreateOrRequestQueryText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickCreateOrRequestQuery()[pri:29, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickCreateOrRequestQuery" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyQueryTitleText()[pri:30, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyQueryTitleText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickAndEnterQueryTitle()[pri:31, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickAndEnterQueryTitle" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifySelectCategoryText()[pri:32, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifySelectCategoryText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnSelectCategory()[pri:33, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnSelectCategory" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyChooseCategoryText()[pri:34, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyChooseCategoryText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickChooseCategory()[pri:35, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickChooseCategory" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyAddDescriptionText()[pri:36, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyAddDescriptionText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickAndEnterAddDescription()[pri:37, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickAndEnterAddDescription" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyCreateQueryText()[pri:38, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyCreateQueryText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnCreateQuery()[pri:39, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnCreateQuery" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnHelpQuery()[pri:40, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnHelpQuery" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyAllQueryStatus()[pri:41, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyAllQueryStatus" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickBackToDashboard()[pri:42, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickBackToDashboard" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
      </group> <!-- Query -->
      <group name="Redeem">
        <method signature="DashboardTest.verifyRedeemText()[pri:9, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyRedeemText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickRedeem()[pri:10, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickRedeem" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyEnterAmountTextDisplayed()[pri:11, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyEnterAmountTextDisplayed" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickAndEnterAmountRedeem()[pri:12, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickAndEnterAmountRedeem" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyRedeemAmountText()[pri:13, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyRedeemAmountText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.getRedeemAmountTextAgain()[pri:14, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="getRedeemAmountTextAgain" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnRedeemAmount()[pri:15, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnRedeemAmount" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyIsRedeemOtpScreenDisplayed()[pri:16, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyIsRedeemOtpScreenDisplayed" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOtpField()[pri:17, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOtpField" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.enterRedeemOtp()[pri:18, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="enterRedeemOtp" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyIsRedeemSubmitButtonEnable()[pri:19, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyIsRedeemSubmitButtonEnable" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnOtpSubmitButton()[pri:20, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnOtpSubmitButton" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.verifyUniqueMRNGeneration()[pri:21, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="verifyUniqueMRNGeneration" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
        <method signature="DashboardTest.clickOnMrmNumberOkText()[pri:22, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" name="clickOnMrmNumberOkText" class="com.tvs.pgm.twoW.mobile.tests.DashboardTest"/>
      </group> <!-- Redeem -->
    </groups>
    <test started-at="2025-07-31T15:45:20 IST" name="2W Tests" finished-at="2025-07-31T15:46:50 IST" duration-ms="90220">
      <class name="com.tvs.pgm.twoW.mobile.tests.LoginTest">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:20 IST" name="setupSuite" finished-at="2025-07-31T15:45:20 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="setupDriver()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:20 IST" name="setupDriver" finished-at="2025-07-31T15:45:30 IST" duration-ms="9680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDriver -->
        <test-method is-config="true" signature="setupPage()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:30 IST" name="setupPage" finished-at="2025-07-31T15:45:30 IST" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupPage -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="startTest" finished-at="2025-07-31T15:45:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.verifyLocationPermissionPopupDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyLocationPermissionPopupDisplayed()[pri:1, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="verifyLocationPermissionPopupDisplayed" finished-at="2025-07-31T15:45:31 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLocationPermissionPopupDisplayed -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="captureResult" finished-at="2025-07-31T15:45:31 IST" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLocationPermissionPopupDisplayed status=SUCCESS method=LoginTest.verifyLocationPermissionPopupDisplayed()[pri:1, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyLocationPermissionText()[pri:2, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="verifyLocationPermissionText" finished-at="2025-07-31T15:45:31 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLocationPermissionText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="startTest" finished-at="2025-07-31T15:45:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.verifyLocationPermissionText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:31 IST" name="captureResult" finished-at="2025-07-31T15:45:32 IST" duration-ms="455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLocationPermissionText status=SUCCESS method=LoginTest.verifyLocationPermissionText()[pri:2, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:32 IST" name="startTest" finished-at="2025-07-31T15:45:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.allowLocationPermission()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="allowLocationPermission()[pri:3, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:32 IST" name="allowLocationPermission" finished-at="2025-07-31T15:45:32 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowLocationPermission -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:32 IST" name="captureResult" finished-at="2025-07-31T15:45:32 IST" duration-ms="563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allowLocationPermission status=SUCCESS method=LoginTest.allowLocationPermission()[pri:3, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyEnterMobileNumberFieldDisplayed()[pri:4, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:32 IST" name="verifyEnterMobileNumberFieldDisplayed" finished-at="2025-07-31T15:45:33 IST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnterMobileNumberFieldDisplayed -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:32 IST" name="startTest" finished-at="2025-07-31T15:45:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.verifyEnterMobileNumberFieldDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:33 IST" name="captureResult" finished-at="2025-07-31T15:45:33 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEnterMobileNumberFieldDisplayed status=SUCCESS method=LoginTest.verifyEnterMobileNumberFieldDisplayed()[pri:4, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:33 IST" name="startTest" finished-at="2025-07-31T15:45:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.verifyInvalidMobileNumberBlocked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyInvalidMobileNumberBlocked()[pri:5, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:33 IST" name="verifyInvalidMobileNumberBlocked" finished-at="2025-07-31T15:45:35 IST" duration-ms="2223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidMobileNumberBlocked -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:35 IST" name="captureResult" finished-at="2025-07-31T15:45:36 IST" duration-ms="511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidMobileNumberBlocked status=SUCCESS method=LoginTest.verifyInvalidMobileNumberBlocked()[pri:5, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enterValidMobileNumber()[pri:6, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:36 IST" name="enterValidMobileNumber" finished-at="2025-07-31T15:45:38 IST" duration-ms="2075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterValidMobileNumber -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:36 IST" name="startTest" finished-at="2025-07-31T15:45:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.enterValidMobileNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:38 IST" name="captureResult" finished-at="2025-07-31T15:45:39 IST" duration-ms="560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterValidMobileNumber status=SUCCESS method=LoginTest.enterValidMobileNumber()[pri:6, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:39 IST" name="startTest" finished-at="2025-07-31T15:45:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.clickVerifyNumberButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickVerifyNumberButton()[pri:7, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:39 IST" name="clickVerifyNumberButton" finished-at="2025-07-31T15:45:39 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickVerifyNumberButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:39 IST" name="captureResult" finished-at="2025-07-31T15:45:40 IST" duration-ms="582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickVerifyNumberButton status=SUCCESS method=LoginTest.clickVerifyNumberButton()[pri:7, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyOtpScreenDisplayed()[pri:8, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:40 IST" name="verifyOtpScreenDisplayed" finished-at="2025-07-31T15:45:41 IST" duration-ms="1769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOtpScreenDisplayed -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:40 IST" name="startTest" finished-at="2025-07-31T15:45:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.verifyOtpScreenDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:41 IST" name="captureResult" finished-at="2025-07-31T15:45:42 IST" duration-ms="585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOtpScreenDisplayed status=SUCCESS method=LoginTest.verifyOtpScreenDisplayed()[pri:8, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOtpField()[pri:9, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:42 IST" name="clickOtpField" finished-at="2025-07-31T15:45:42 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOtpField -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:42 IST" name="startTest" finished-at="2025-07-31T15:45:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.clickOtpField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:42 IST" name="captureResult" finished-at="2025-07-31T15:45:43 IST" duration-ms="459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOtpField status=SUCCESS method=LoginTest.clickOtpField()[pri:9, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enterOtp()[pri:10, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:43 IST" name="enterOtp" finished-at="2025-07-31T15:45:45 IST" duration-ms="1812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterOtp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:43 IST" name="startTest" finished-at="2025-07-31T15:45:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.LoginTest.enterOtp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:45 IST" name="captureResult" finished-at="2025-07-31T15:45:45 IST" duration-ms="560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterOtp status=SUCCESS method=LoginTest.enterOtp()[pri:10, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="tearDownDriver()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:45:45 IST" name="tearDownDriver" finished-at="2025-07-31T15:45:46 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownDriver -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.LoginTest@29d89d5d]" started-at="2025-07-31T15:46:51 IST" name="tearDownSuite" finished-at="2025-07-31T15:46:51 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- com.tvs.pgm.twoW.mobile.tests.LoginTest -->
      <class name="com.tvs.pgm.twoW.mobile.tests.DashboardTest">
        <test-method is-config="true" signature="setupDriver()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:46 IST" name="setupDriver" finished-at="2025-07-31T15:45:52 IST" duration-ms="6210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDriver -->
        <test-method is-config="true" signature="setupPage()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:52 IST" name="setupPage" finished-at="2025-07-31T15:45:52 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupPage -->
        <test-method signature="verifyNotificationAccessText()[pri:1, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:52 IST" name="verifyNotificationAccessText" description="Verify that the notification access text is correct" finished-at="2025-07-31T15:45:52 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNotificationAccessText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:52 IST" name="startTest" finished-at="2025-07-31T15:45:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyNotificationAccessText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:52 IST" name="captureResult" finished-at="2025-07-31T15:45:53 IST" duration-ms="532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNotificationAccessText status=SUCCESS method=DashboardTest.verifyNotificationAccessText()[pri:1, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyAllowButtonDisplayed()[pri:2, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="verifyAllowButtonDisplayed" description="Verify that the Allow button is displayed" finished-at="2025-07-31T15:45:53 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllowButtonDisplayed -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="startTest" finished-at="2025-07-31T15:45:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyAllowButtonDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="captureResult" finished-at="2025-07-31T15:45:53 IST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllowButtonDisplayed status=SUCCESS method=DashboardTest.verifyAllowButtonDisplayed()[pri:2, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="startTest" finished-at="2025-07-31T15:45:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickAllowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickAllowButton()[pri:3, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="clickAllowButton" description="Click the Allow button on notification permission" finished-at="2025-07-31T15:45:53 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAllowButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:53 IST" name="captureResult" finished-at="2025-07-31T15:45:54 IST" duration-ms="611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAllowButton status=SUCCESS method=DashboardTest.clickAllowButton()[pri:3, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyScanForRewardsText()[pri:4, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:54 IST" name="verifyScanForRewardsText" description="Verify Scan for Rewards text is visible" finished-at="2025-07-31T15:45:54 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScanForRewardsText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:54 IST" name="startTest" finished-at="2025-07-31T15:45:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyScanForRewardsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:54 IST" name="captureResult" finished-at="2025-07-31T15:45:55 IST" duration-ms="575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScanForRewardsText status=SUCCESS method=DashboardTest.verifyScanForRewardsText()[pri:4, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="startTest" finished-at="2025-07-31T15:45:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickScanForRewardsButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickScanForRewardsButton()[pri:5, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="clickScanForRewardsButton" description="Click on Scan for Rewards button" finished-at="2025-07-31T15:45:55 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickScanForRewardsButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="captureResult" finished-at="2025-07-31T15:45:55 IST" duration-ms="523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickScanForRewardsButton status=SUCCESS method=DashboardTest.clickScanForRewardsButton()[pri:5, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="startTest" finished-at="2025-07-31T15:45:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyCameraPermissionText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyCameraPermissionText()[pri:6, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="verifyCameraPermissionText" description="Verify camera permission text" finished-at="2025-07-31T15:45:55 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCameraPermissionText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:55 IST" name="captureResult" finished-at="2025-07-31T15:45:56 IST" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCameraPermissionText status=SUCCESS method=DashboardTest.verifyCameraPermissionText()[pri:6, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:56 IST" name="startTest" finished-at="2025-07-31T15:45:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyWhileUsingTheAppText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyWhileUsingTheAppText()[pri:7, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:56 IST" name="verifyWhileUsingTheAppText" description="Verify &#039;While using the app&#039; permission text" finished-at="2025-07-31T15:45:56 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWhileUsingTheAppText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:56 IST" name="captureResult" finished-at="2025-07-31T15:45:56 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWhileUsingTheAppText status=SUCCESS method=DashboardTest.verifyWhileUsingTheAppText()[pri:7, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:56 IST" name="startTest" finished-at="2025-07-31T15:45:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickWhileUsingTheApp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickWhileUsingTheApp()[pri:8, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:56 IST" name="clickWhileUsingTheApp" description="Click on &#039;While using the app&#039; option" finished-at="2025-07-31T15:45:57 IST" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickWhileUsingTheApp -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:57 IST" name="captureResult" finished-at="2025-07-31T15:45:57 IST" duration-ms="557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickWhileUsingTheApp status=SUCCESS method=DashboardTest.clickWhileUsingTheApp()[pri:8, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyRedeemText()[pri:9, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:57 IST" name="verifyRedeemText" description="Verify &#039;Redeem&#039; text is visible" finished-at="2025-07-31T15:45:57 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRedeemText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:57 IST" name="startTest" finished-at="2025-07-31T15:45:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyRedeemText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:57 IST" name="captureResult" finished-at="2025-07-31T15:45:58 IST" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRedeemText status=SUCCESS method=DashboardTest.verifyRedeemText()[pri:9, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickRedeem()[pri:10, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:58 IST" name="clickRedeem" description="Click on &#039;Redeem&#039; button" finished-at="2025-07-31T15:45:58 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickRedeem -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:58 IST" name="startTest" finished-at="2025-07-31T15:45:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickRedeem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:58 IST" name="captureResult" finished-at="2025-07-31T15:45:58 IST" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickRedeem status=SUCCESS method=DashboardTest.clickRedeem()[pri:10, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyEnterAmountTextDisplayed()[pri:11, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:58 IST" name="verifyEnterAmountTextDisplayed" description="Verify &#039;Enter Amount&#039; field is displayed" finished-at="2025-07-31T15:45:59 IST" duration-ms="933" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ 'Enter Amount' hint text is null. expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ 'Enter Amount' hint text is null. expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1496)
at com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyEnterAmountTextDisplayed(DashboardTest.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnterAmountTextDisplayed -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:45:58 IST" name="startTest" finished-at="2025-07-31T15:45:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyEnterAmountTextDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:00 IST" name="captureResult" finished-at="2025-07-31T15:46:00 IST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEnterAmountTextDisplayed status=FAILURE method=DashboardTest.verifyEnterAmountTextDisplayed()[pri:11, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickAndEnterAmountRedeem()[pri:12, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:00 IST" name="clickAndEnterAmountRedeem" description="Click and enter amount for redeem" finished-at="2025-07-31T15:46:04 IST" duration-ms="3241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAndEnterAmountRedeem -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:00 IST" name="startTest" finished-at="2025-07-31T15:46:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickAndEnterAmountRedeem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:04 IST" name="captureResult" finished-at="2025-07-31T15:46:04 IST" duration-ms="475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAndEnterAmountRedeem status=SUCCESS method=DashboardTest.clickAndEnterAmountRedeem()[pri:12, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:04 IST" name="startTest" finished-at="2025-07-31T15:46:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyRedeemAmountText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyRedeemAmountText()[pri:13, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:04 IST" name="verifyRedeemAmountText" description="Verify &#039;Redeem Amount&#039; text is displayed" finished-at="2025-07-31T15:46:04 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRedeemAmountText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:04 IST" name="captureResult" finished-at="2025-07-31T15:46:05 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRedeemAmountText status=SUCCESS method=DashboardTest.verifyRedeemAmountText()[pri:13, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:05 IST" name="startTest" finished-at="2025-07-31T15:46:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.getRedeemAmountTextAgain()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="getRedeemAmountTextAgain()[pri:14, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:05 IST" name="getRedeemAmountTextAgain" description="Get Redeem Amount text" finished-at="2025-07-31T15:46:05 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRedeemAmountTextAgain -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:05 IST" name="captureResult" finished-at="2025-07-31T15:46:06 IST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getRedeemAmountTextAgain status=SUCCESS method=DashboardTest.getRedeemAmountTextAgain()[pri:14, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOnRedeemAmount()[pri:15, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:06 IST" name="clickOnRedeemAmount" description="Click on Redeem Amount" finished-at="2025-07-31T15:46:08 IST" duration-ms="2325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnRedeemAmount -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:06 IST" name="startTest" finished-at="2025-07-31T15:46:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnRedeemAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:08 IST" name="captureResult" finished-at="2025-07-31T15:46:08 IST" duration-ms="525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnRedeemAmount status=SUCCESS method=DashboardTest.clickOnRedeemAmount()[pri:15, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:08 IST" name="startTest" finished-at="2025-07-31T15:46:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyIsRedeemOtpScreenDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyIsRedeemOtpScreenDisplayed()[pri:16, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:08 IST" name="verifyIsRedeemOtpScreenDisplayed" description="Verify OTP screen is displayed" finished-at="2025-07-31T15:46:09 IST" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsRedeemOtpScreenDisplayed -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:09 IST" name="captureResult" finished-at="2025-07-31T15:46:09 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIsRedeemOtpScreenDisplayed status=SUCCESS method=DashboardTest.verifyIsRedeemOtpScreenDisplayed()[pri:16, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOtpField()[pri:17, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:09 IST" name="clickOtpField" description="Click on OTP field" finished-at="2025-07-31T15:46:11 IST" duration-ms="1521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOtpField -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:09 IST" name="startTest" finished-at="2025-07-31T15:46:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOtpField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:11 IST" name="captureResult" finished-at="2025-07-31T15:46:11 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOtpField status=SUCCESS method=DashboardTest.clickOtpField()[pri:17, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="enterRedeemOtp()[pri:18, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:11 IST" name="enterRedeemOtp" description="Enter OTP for redeem" finished-at="2025-07-31T15:46:12 IST" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterRedeemOtp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:11 IST" name="startTest" finished-at="2025-07-31T15:46:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.enterRedeemOtp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:12 IST" name="captureResult" finished-at="2025-07-31T15:46:13 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterRedeemOtp status=SUCCESS method=DashboardTest.enterRedeemOtp()[pri:18, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyIsRedeemSubmitButtonEnable()[pri:19, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:13 IST" name="verifyIsRedeemSubmitButtonEnable" description="Verify OTP submit button is enabled" finished-at="2025-07-31T15:46:13 IST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsRedeemSubmitButtonEnable -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:13 IST" name="startTest" finished-at="2025-07-31T15:46:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyIsRedeemSubmitButtonEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:13 IST" name="captureResult" finished-at="2025-07-31T15:46:14 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIsRedeemSubmitButtonEnable status=SUCCESS method=DashboardTest.verifyIsRedeemSubmitButtonEnable()[pri:19, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:14 IST" name="startTest" finished-at="2025-07-31T15:46:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnOtpSubmitButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickOnOtpSubmitButton()[pri:20, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:14 IST" name="clickOnOtpSubmitButton" description="Click on OTP Submit Button" finished-at="2025-07-31T15:46:15 IST" duration-ms="1054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnOtpSubmitButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:15 IST" name="captureResult" finished-at="2025-07-31T15:46:15 IST" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnOtpSubmitButton status=SUCCESS method=DashboardTest.clickOnOtpSubmitButton()[pri:20, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:15 IST" name="startTest" finished-at="2025-07-31T15:46:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyUniqueMRNGeneration()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyUniqueMRNGeneration()[pri:21, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:15 IST" name="verifyUniqueMRNGeneration" description="Verify MRN is generated correctly" finished-at="2025-07-31T15:46:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUniqueMRNGeneration -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:15 IST" name="captureResult" finished-at="2025-07-31T15:46:16 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUniqueMRNGeneration status=SUCCESS method=DashboardTest.verifyUniqueMRNGeneration()[pri:21, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOnMrmNumberOkText()[pri:22, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:16 IST" name="clickOnMrmNumberOkText" description="Click OK on MRN success popup" finished-at="2025-07-31T15:46:17 IST" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnMrmNumberOkText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:16 IST" name="startTest" finished-at="2025-07-31T15:46:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnMrmNumberOkText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:17 IST" name="captureResult" finished-at="2025-07-31T15:46:17 IST" duration-ms="585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnMrmNumberOkText status=SUCCESS method=DashboardTest.clickOnMrmNumberOkText()[pri:22, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyFindPartsText()[pri:23, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:17 IST" name="verifyFindPartsText" description="Verify &#039;Find Parts&#039; module text" finished-at="2025-07-31T15:46:18 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFindPartsText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:17 IST" name="startTest" finished-at="2025-07-31T15:46:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyFindPartsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:18 IST" name="captureResult" finished-at="2025-07-31T15:46:18 IST" duration-ms="572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFindPartsText status=SUCCESS method=DashboardTest.verifyFindPartsText()[pri:23, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickFindParts()[pri:24, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:18 IST" name="clickFindParts" description="Click on &#039;Find Parts&#039;" finished-at="2025-07-31T15:46:19 IST" duration-ms="1232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickFindParts -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:18 IST" name="startTest" finished-at="2025-07-31T15:46:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickFindParts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:19 IST" name="captureResult" finished-at="2025-07-31T15:46:20 IST" duration-ms="901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickFindParts status=SUCCESS method=DashboardTest.clickFindParts()[pri:24, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickCancelOnWhatsAppBot()[pri:25, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:20 IST" name="clickCancelOnWhatsAppBot" description="Click cancel on WhatsApp bot popup" finished-at="2025-07-31T15:46:21 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCancelOnWhatsAppBot -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:20 IST" name="startTest" finished-at="2025-07-31T15:46:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickCancelOnWhatsAppBot()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:21 IST" name="captureResult" finished-at="2025-07-31T15:46:21 IST" duration-ms="655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCancelOnWhatsAppBot status=SUCCESS method=DashboardTest.clickCancelOnWhatsAppBot()[pri:25, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:21 IST" name="startTest" finished-at="2025-07-31T15:46:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyHelpText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyHelpText()[pri:26, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:21 IST" name="verifyHelpText" description="Verify &#039;Help&#039; text" finished-at="2025-07-31T15:46:22 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHelpText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:22 IST" name="captureResult" finished-at="2025-07-31T15:46:22 IST" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHelpText status=SUCCESS method=DashboardTest.verifyHelpText()[pri:26, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOnHelp()[pri:27, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:22 IST" name="clickOnHelp" description="Click on &#039;Help&#039;" finished-at="2025-07-31T15:46:23 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnHelp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:22 IST" name="startTest" finished-at="2025-07-31T15:46:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnHelp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:23 IST" name="captureResult" finished-at="2025-07-31T15:46:23 IST" duration-ms="434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnHelp status=SUCCESS method=DashboardTest.clickOnHelp()[pri:27, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyCreateOrRequestQueryText()[pri:28, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:23 IST" name="verifyCreateOrRequestQueryText" description="Verify &#039;Create Query / Request&#039; text" finished-at="2025-07-31T15:46:24 IST" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateOrRequestQueryText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:23 IST" name="startTest" finished-at="2025-07-31T15:46:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyCreateOrRequestQueryText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:24 IST" name="captureResult" finished-at="2025-07-31T15:46:24 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateOrRequestQueryText status=SUCCESS method=DashboardTest.verifyCreateOrRequestQueryText()[pri:28, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:24 IST" name="startTest" finished-at="2025-07-31T15:46:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickCreateOrRequestQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickCreateOrRequestQuery()[pri:29, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:24 IST" name="clickCreateOrRequestQuery" description="Click on &#039;Create Query / Request&#039;" finished-at="2025-07-31T15:46:25 IST" duration-ms="1083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCreateOrRequestQuery -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:25 IST" name="captureResult" finished-at="2025-07-31T15:46:26 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCreateOrRequestQuery status=SUCCESS method=DashboardTest.clickCreateOrRequestQuery()[pri:29, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyQueryTitleText()[pri:30, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:26 IST" name="verifyQueryTitleText" description="Verify query title placeholder" finished-at="2025-07-31T15:46:26 IST" duration-ms="165" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ Query title placeholder is incorrect expected [Enter Here] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ Query title placeholder is incorrect expected [Enter Here] but found [null]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyQueryTitleText(DashboardTest.java:254)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQueryTitleText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:26 IST" name="startTest" finished-at="2025-07-31T15:46:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyQueryTitleText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:26 IST" name="captureResult" finished-at="2025-07-31T15:46:27 IST" duration-ms="502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyQueryTitleText status=FAILURE method=DashboardTest.verifyQueryTitleText()[pri:30, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:27 IST" name="startTest" finished-at="2025-07-31T15:46:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickAndEnterQueryTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickAndEnterQueryTitle()[pri:31, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:27 IST" name="clickAndEnterQueryTitle" description="Click and enter query title" finished-at="2025-07-31T15:46:28 IST" duration-ms="1476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAndEnterQueryTitle -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:28 IST" name="captureResult" finished-at="2025-07-31T15:46:29 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAndEnterQueryTitle status=SUCCESS method=DashboardTest.clickAndEnterQueryTitle()[pri:31, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifySelectCategoryText()[pri:32, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:29 IST" name="verifySelectCategoryText" description="Verify &#039;Select Category&#039; placeholder" finished-at="2025-07-31T15:46:29 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySelectCategoryText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:29 IST" name="startTest" finished-at="2025-07-31T15:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifySelectCategoryText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:29 IST" name="captureResult" finished-at="2025-07-31T15:46:30 IST" duration-ms="537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySelectCategoryText status=SUCCESS method=DashboardTest.verifySelectCategoryText()[pri:32, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:30 IST" name="startTest" finished-at="2025-07-31T15:46:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnSelectCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickOnSelectCategory()[pri:33, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:30 IST" name="clickOnSelectCategory" description="Click on &#039;Select Category&#039;" finished-at="2025-07-31T15:46:30 IST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnSelectCategory -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:30 IST" name="captureResult" finished-at="2025-07-31T15:46:30 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnSelectCategory status=SUCCESS method=DashboardTest.clickOnSelectCategory()[pri:33, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyChooseCategoryText()[pri:34, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:30 IST" name="verifyChooseCategoryText" description="Verify &#039;Support Related&#039; is chosen" finished-at="2025-07-31T15:46:31 IST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseCategoryText -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:30 IST" name="startTest" finished-at="2025-07-31T15:46:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyChooseCategoryText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:31 IST" name="captureResult" finished-at="2025-07-31T15:46:31 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyChooseCategoryText status=SUCCESS method=DashboardTest.verifyChooseCategoryText()[pri:34, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickChooseCategory()[pri:35, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:31 IST" name="clickChooseCategory" description="Click on &#039;Support Related&#039;" finished-at="2025-07-31T15:46:32 IST" duration-ms="1010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickChooseCategory -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:31 IST" name="startTest" finished-at="2025-07-31T15:46:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickChooseCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:32 IST" name="captureResult" finished-at="2025-07-31T15:46:33 IST" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickChooseCategory status=SUCCESS method=DashboardTest.clickChooseCategory()[pri:35, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:33 IST" name="startTest" finished-at="2025-07-31T15:46:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyAddDescriptionText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyAddDescriptionText()[pri:36, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:33 IST" name="verifyAddDescriptionText" description="Verify add description placeholder" finished-at="2025-07-31T15:46:33 IST" duration-ms="145" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ Description placeholder text is incorrect expected [Enter Description Here] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ Description placeholder text is incorrect expected [Enter Description Here] but found [null]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyAddDescriptionText(DashboardTest.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddDescriptionText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:33 IST" name="captureResult" finished-at="2025-07-31T15:46:34 IST" duration-ms="481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddDescriptionText status=FAILURE method=DashboardTest.verifyAddDescriptionText()[pri:36, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:34 IST" name="startTest" finished-at="2025-07-31T15:46:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickAndEnterAddDescription()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickAndEnterAddDescription()[pri:37, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:34 IST" name="clickAndEnterAddDescription" description="Click and add description" finished-at="2025-07-31T15:46:37 IST" duration-ms="3027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAndEnterAddDescription -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:37 IST" name="captureResult" finished-at="2025-07-31T15:46:37 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAndEnterAddDescription status=SUCCESS method=DashboardTest.clickAndEnterAddDescription()[pri:37, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:37 IST" name="startTest" finished-at="2025-07-31T15:46:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyCreateQueryText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyCreateQueryText()[pri:38, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:37 IST" name="verifyCreateQueryText" description="Verify &#039;Create Query / Request&#039; final button" finished-at="2025-07-31T15:46:38 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateQueryText -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:38 IST" name="captureResult" finished-at="2025-07-31T15:46:38 IST" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateQueryText status=SUCCESS method=DashboardTest.verifyCreateQueryText()[pri:38, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:38 IST" name="startTest" finished-at="2025-07-31T15:46:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnCreateQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="clickOnCreateQuery()[pri:39, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:38 IST" name="clickOnCreateQuery" description="Click on Create Query" finished-at="2025-07-31T15:46:38 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnCreateQuery -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:38 IST" name="captureResult" finished-at="2025-07-31T15:46:39 IST" duration-ms="531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnCreateQuery status=SUCCESS method=DashboardTest.clickOnCreateQuery()[pri:39, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickOnHelpQuery()[pri:40, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:39 IST" name="clickOnHelpQuery" description="Click on Help again from dashboard" finished-at="2025-07-31T15:46:41 IST" duration-ms="2473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnHelpQuery -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:39 IST" name="startTest" finished-at="2025-07-31T15:46:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickOnHelpQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:41 IST" name="captureResult" finished-at="2025-07-31T15:46:42 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnHelpQuery status=SUCCESS method=DashboardTest.clickOnHelpQuery()[pri:40, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="verifyAllQueryStatus()[pri:41, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:42 IST" name="verifyAllQueryStatus" description="Verify all query IDs and statuses" finished-at="2025-07-31T15:46:48 IST" duration-ms="5944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllQueryStatus -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:42 IST" name="startTest" finished-at="2025-07-31T15:46:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.verifyAllQueryStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:48 IST" name="captureResult" finished-at="2025-07-31T15:46:48 IST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllQueryStatus status=SUCCESS method=DashboardTest.verifyAllQueryStatus()[pri:41, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method signature="clickBackToDashboard()[pri:42, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:48 IST" name="clickBackToDashboard" description="Click back to dashboard from Query" finished-at="2025-07-31T15:46:49 IST" duration-ms="1184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickBackToDashboard -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:48 IST" name="startTest" finished-at="2025-07-31T15:46:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tvs.pgm.twoW.mobile.tests.DashboardTest.clickBackToDashboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:49 IST" name="captureResult" finished-at="2025-07-31T15:46:50 IST" duration-ms="624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickBackToDashboard status=SUCCESS method=DashboardTest.clickBackToDashboard()[pri:42, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="tearDownDriver()[pri:0, instance:com.tvs.pgm.twoW.mobile.tests.DashboardTest@37654521]" started-at="2025-07-31T15:46:50 IST" name="tearDownDriver" finished-at="2025-07-31T15:46:50 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownDriver -->
      </class> <!-- com.tvs.pgm.twoW.mobile.tests.DashboardTest -->
    </test> <!-- 2W Tests -->
  </suite> <!-- 2WApp UAT TestSuite -->
</testng-results>
